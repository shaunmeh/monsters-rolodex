{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","company","catchPhrase","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","ReactDOM","render","document","getElementById"],"mappings":"2SAIaA,G,MAAO,SAACC,GAAD,OAEhB,yBAAKC,UAAU,kBACX,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,gCAAML,EAAMI,QAAQE,MACpB,+BAAKN,EAAMI,QAAQG,QAAQC,YAA3B,QCHKC,G,MAAW,SAACT,GAAD,OAEpB,yBAAKC,UAAU,aACdD,EAAMU,SAASC,KAAI,SAAAP,GAAO,OACvB,kBAAC,EAAD,CAAMQ,IAAKR,EAAQC,GAAID,QAASA,UCN3BS,G,MAAY,SAAC,GAAD,EAAGC,YAAH,IAAgBC,EAAhB,EAAgBA,aAAhB,OAErB,2BACMd,UAAU,SACVe,KAAK,SACLF,YAAY,kBACZG,SAAUF,MCgDLG,E,YA/Cb,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IALH,E,iFAWO,IAAD,OAElBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,+BAUlC,IAAD,SAE2BE,KAAKR,MAA/BT,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQE,KAAKwB,cAAcC,SAASX,EAAYU,kBAElD,OACE,yBAAK7B,UAAU,OAEb,kBAAC,EAAD,CACEa,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAU,CAACN,YAAaY,EAAEC,OAAOC,WAG3D,kBAAC,EAAD,CAAUxB,SAAUkB,S,GAxCVO,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0d319cfb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n        <h2> {props.monster.name}</h2>\r\n        <p> {props.monster.company.catchPhrase} </p>\r\n    </div>\r\n\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => (\r\n    \r\n    <div className='card-list'>\r\n    {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster}/>\r\n              \r\n    ))}\r\n\r\n    </div>\r\n    \r\n);    ","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\r\n    <input\r\n          className='search'   \r\n          type='search' \r\n          placeholder='Search Monsters' \r\n          onChange={handleChange}\r\n          />\r\n\r\n)","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\n\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  \n\n  componentDidMount() {\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}));\n  }\n\n  // OPTIONAL - METHOD WAS WRITTEN IN CASE IT COULD BE USED AGAIN.  OTHERWISE\n  //HANDLEcHANGE IS PASSED THROUGH THE COMPONENTS (SEARCHbOX)\n  \n  // handleChange = e => {\n  //   this.setState({searchField: e.target.state});\n  // };\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className='App'>\n              \n        <SearchBox \n          placeholder='Search Monsters'\n          handleChange={e => this.setState ({searchField: e.target.value})}\n        />   \n\n        <CardList monsters={filteredMonsters}/>\n        \n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}